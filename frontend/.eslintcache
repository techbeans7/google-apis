[{"E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\index.js":"1","E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\App.js":"2","E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\context\\AuthContext.js":"3","E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\components\\Home.js":"4","E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\components\\AddCBC.js":"5","E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\components\\Navbar.js":"6","E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\components\\Login.js":"7","E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\services\\AuthService.js":"8","E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\services\\MedicalTestService.js":"9","E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\components\\Message.js":"10","E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\components\\SearchCBC.js":"11","E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\hocs\\PrivateRoute.js":"12","E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\components\\Admin.js":"13","E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\hocs\\NonPrivateRoute.js":"14","E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\components\\CBCReport.js":"15","E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\components\\IdleTimer.js":"16","E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\components\\Patient.js":"17","E:\\MERN\\frontend\\src\\index.js":"18","E:\\MERN\\frontend\\src\\App.js":"19","E:\\MERN\\frontend\\src\\context\\AuthContext.js":"20","E:\\MERN\\frontend\\src\\components\\Navbar.js":"21","E:\\MERN\\frontend\\src\\components\\Home.js":"22","E:\\MERN\\frontend\\src\\hocs\\NonPrivateRoute.js":"23","E:\\MERN\\frontend\\src\\hocs\\PrivateRoute.js":"24","E:\\MERN\\frontend\\src\\services\\AuthService.js":"25","E:\\MERN\\frontend\\src\\components\\Message.js":"26","E:\\MERN\\frontend\\src\\components\\GoogleLogin\\GoogleLogin.js":"27","E:\\MERN\\frontend\\src\\components\\Contacts\\ContactsList.js":"28","E:\\MERN\\frontend\\src\\services\\ContactService.js":"29","E:\\google-apis\\frontend\\src\\index.js":"30","E:\\google-apis\\frontend\\src\\App.js":"31","E:\\google-apis\\frontend\\src\\context\\AuthContext.js":"32","E:\\google-apis\\frontend\\src\\components\\Navbar.js":"33","E:\\google-apis\\frontend\\src\\components\\Home.js":"34","E:\\google-apis\\frontend\\src\\components\\GoogleLogin\\GoogleLogin.js":"35","E:\\google-apis\\frontend\\src\\hocs\\PrivateRoute.js":"36","E:\\google-apis\\frontend\\src\\hocs\\NonPrivateRoute.js":"37","E:\\google-apis\\frontend\\src\\services\\AuthService.js":"38","E:\\google-apis\\frontend\\src\\components\\Contacts\\ContactsList.js":"39","E:\\google-apis\\frontend\\src\\components\\Message.js":"40","E:\\google-apis\\frontend\\src\\services\\ContactService.js":"41","E:\\google-apis\\frontend\\src\\services\\CalenderService.js":"42"},{"size":301,"mtime":1610370791592,"results":"43","hashOfConfig":"44"},{"size":1394,"mtime":1610370791548,"results":"45","hashOfConfig":"44"},{"size":1458,"mtime":1610370791590,"results":"46","hashOfConfig":"44"},{"size":703,"mtime":1610370791550,"results":"47","hashOfConfig":"44"},{"size":4903,"mtime":1610370791549,"results":"48","hashOfConfig":"44"},{"size":2968,"mtime":1610370791587,"results":"49","hashOfConfig":"44"},{"size":2983,"mtime":1610445052306,"results":"50","hashOfConfig":"44"},{"size":1366,"mtime":1610370791592,"results":"51","hashOfConfig":"44"},{"size":2534,"mtime":1610370791611,"results":"52","hashOfConfig":"44"},{"size":462,"mtime":1610370791586,"results":"53","hashOfConfig":"44"},{"size":3732,"mtime":1610370791589,"results":"54","hashOfConfig":"44"},{"size":727,"mtime":1610370791591,"results":"55","hashOfConfig":"44"},{"size":194,"mtime":1610370791549,"results":"56","hashOfConfig":"44"},{"size":573,"mtime":1610370791591,"results":"57","hashOfConfig":"44"},{"size":1347,"mtime":1610370791550,"results":"58","hashOfConfig":"44"},{"size":1482,"mtime":1610370791550,"results":"59","hashOfConfig":"44"},{"size":200,"mtime":1610370791589,"results":"60","hashOfConfig":"44"},{"size":301,"mtime":1610370791592,"results":"61","hashOfConfig":"62"},{"size":843,"mtime":1610565611233,"results":"63","hashOfConfig":"62"},{"size":873,"mtime":1610549722030,"results":"64","hashOfConfig":"62"},{"size":2164,"mtime":1610553117490,"results":"65","hashOfConfig":"62"},{"size":899,"mtime":1610552013531,"results":"66","hashOfConfig":"62"},{"size":572,"mtime":1610544327964,"results":"67","hashOfConfig":"62"},{"size":572,"mtime":1610566924071,"results":"68","hashOfConfig":"62"},{"size":1025,"mtime":1610566409602,"results":"69","hashOfConfig":"62"},{"size":462,"mtime":1610370791586,"results":"70","hashOfConfig":"62"},{"size":1833,"mtime":1610566295335,"results":"71","hashOfConfig":"62"},{"size":1794,"mtime":1610567579339,"results":"72","hashOfConfig":"62"},{"size":417,"mtime":1610565984844,"results":"73","hashOfConfig":"62"},{"size":301,"mtime":1610370791592,"results":"74","hashOfConfig":"75"},{"size":843,"mtime":1610565611233,"results":"76","hashOfConfig":"75"},{"size":873,"mtime":1610549722030,"results":"77","hashOfConfig":"75"},{"size":2164,"mtime":1610553117490,"results":"78","hashOfConfig":"75"},{"size":899,"mtime":1610552013531,"results":"79","hashOfConfig":"75"},{"size":1874,"mtime":1610607032731,"results":"80","hashOfConfig":"75"},{"size":572,"mtime":1610566924071,"results":"81","hashOfConfig":"75"},{"size":572,"mtime":1610544327964,"results":"82","hashOfConfig":"75"},{"size":1025,"mtime":1610566409602,"results":"83","hashOfConfig":"75"},{"size":2515,"mtime":1610608844429,"results":"84","hashOfConfig":"75"},{"size":462,"mtime":1610370791586,"results":"85","hashOfConfig":"75"},{"size":417,"mtime":1610608558281,"results":"86","hashOfConfig":"75"},{"size":470,"mtime":1610608841860,"results":"87","hashOfConfig":"75"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"17b9gj",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},"tahmmg",{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"135"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"135"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"135"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"135"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"135"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qo5994",{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\index.js",[],["188","189"],"E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\App.js",[],"E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\context\\AuthContext.js",["190","191"],"import React, {createContext, useState, useEffect} from 'react';\r\nimport FingerprintJS from '@fingerprintjs/fingerprintjs';\r\nimport AuthService from '../services/AuthService';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport default ({children}) => {\r\n\r\n    const [user, setUser] = useState(null);\r\n    const [roleId, setRoleId] = useState(null);\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [fingerprint, setFingerprint] = useState(null);\r\n\r\n    useEffect(async ()=>{\r\n\r\n        const fp = await FingerprintJS.load();\r\n      \r\n        // The FingerprintJS agent is ready.\r\n        // Get a visitor identifier when you'd like to.\r\n        const result = await fp.get();\r\n\r\n        // This is the visitor identifier:\r\n        const visitorId = result.visitorId;\r\n        \r\n        setFingerprint(visitorId);\r\n        \r\n        AuthService.isAuthenticated().then(data=>{\r\n            setUser(data.user);\r\n            setRoleId(data.roleId);\r\n            setIsAuthenticated(data.isAuthenticated);\r\n            setIsLoaded(true);\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            {!isLoaded ? <h1>Loading</h1> : \r\n            <AuthContext.Provider value={{user, setUser, isAuthenticated, setIsAuthenticated, fingerprint, setFingerprint, roleId, setRoleId}}>\r\n                {children}\r\n            </AuthContext.Provider>}\r\n        </div>\r\n    )\r\n}","E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\components\\Home.js",["192"],"import React, {useState, useContext, useEffect} from 'react';\r\nimport {AuthContext} from '../context/AuthContext';\r\n\r\n\r\nconst Home = ()=>{\r\n\r\n    const [user, setUser] = useState({firstName: \"\", lastName: \"\"});\r\n    const authContext = useContext(AuthContext);\r\n\r\n    useEffect(()=>{\r\n        if (authContext.isAuthenticated)\r\n            setUser({firstName: authContext.user.user.firstName, lastName: authContext.user.user.lastName});\r\n    },[]);\r\n\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <h5>HIPAA Home</h5>\r\n            <div>{authContext.isAuthenticated ?  <p>Welcome {user.firstName} {user.lastName}</p> : null}</div>\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default Home;\r\n","E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\components\\AddCBC.js",["193","194","195"],"import React, {useState, useContext} from 'react';\r\nimport * as MedicalTestService from '../services/MedicalTestService';\r\nimport AuthService from '../services/AuthService';\r\nimport {AuthContext} from '../context/AuthContext';\r\nimport Message from './Message';\r\n\r\nconst AddCBC = (props)=>{\r\n\r\n    const [report, setReport] = useState({\r\n                                    personalNumber: \"\", \r\n                                    redBloodCell: \"\", \r\n                                    hemoglobin: \"\",\r\n                                    hematocrit: \"\", \r\n                                    whiteBloodCell: \"\", \r\n                                    platelet: \"\", \r\n                                });\r\n    const [message, setMessage] = useState(null);\r\n    const [status, setStatus] = useState(null);\r\n    const authContext = useContext(AuthContext);\r\n   \r\n    const onChange = (e) => {\r\n        e.preventDefault();\r\n        setReport({...report, [e.target.name] : e.target.value});\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        \r\n        e.preventDefault();\r\n\r\n        MedicalTestService\r\n        .addBloodCBC(report)\r\n        .then(result=>{\r\n\r\n            if (result == 'logout'){\r\n                AuthService.logout().then(data =>{\r\n                    if (data.status == 'success'){\r\n                        authContext.setUser(null);\r\n                        authContext.setIsAuthenticated(false);\r\n                        props.history.push('/login');\r\n                    }\r\n                })\r\n                return;\r\n            }\r\n\r\n            const {status, message} = result;\r\n            \r\n            if (status == 'success')\r\n                resetForm();\r\n\r\n            setStatus(status);\r\n            setMessage(message);\r\n                \r\n        })\r\n    }\r\n\r\n    const resetForm = () =>{\r\n        setReport({\r\n            personalNumber: \"\", \r\n            redBloodCell: \"\", \r\n            hemoglobin: \"\",\r\n            hematocrit: \"\", \r\n            whiteBloodCell: \"\", \r\n            platelet: \"\", \r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <form onSubmit={onSubmit}>\r\n                <h5>Add Patient CBC Report</h5>\r\n                <div className=\"row\">\r\n                    <div className=\"form-group col-lg-4\">\r\n                        <label htmlFor=\"personalNumber\" className=\"sr-only\">Personal Number: </label>\r\n                        <input type=\"text\" name=\"personalNumber\" value={report.personalNumber} onChange={onChange} className=\"form-control\" required/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"form-group col-lg-4\">\r\n                        <label htmlFor=\"redBloodCell\" className=\"sr-only\">Red Blood Cell (million cells/mcL):</label>\r\n                        <input type=\"number\" name=\"redBloodCell\" value={report.redBloodCell} onChange={onChange} className=\"form-control\" required/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"form-group col-lg-4\">\r\n                        <label htmlFor=\"hemoglobin\" className=\"sr-only\">Hemoglobin (grams/L): </label>\r\n                        <input type=\"number\" name=\"hemoglobin\" value={report.hemoglobin} onChange={onChange} className=\"form-control\" required/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"form-group col-lg-4\">\r\n                        <label htmlFor=\"hematocrit\" className=\"sr-only\">Hematocrit (percent): </label>\r\n                        <input type=\"number\" name=\"hematocrit\" value={report.hematocrit} onChange={onChange} className=\"form-control\" required/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"form-group col-lg-4\">\r\n                        <label htmlFor=\"whiteBloodCell\" className=\"sr-only\">White Blood Cell (cells/mcL): </label>\r\n                        <input type=\"number\" name=\"whiteBloodCell\" value={report.whiteBloodCell} onChange={onChange} className=\"form-control\" required/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div class=\"form-group col-lg-4\">\r\n                        <label htmlFor=\"platelet\" className=\"sr-only\">Platelet (/mcL): </label>\r\n                        <input type=\"number\" name=\"platelet\" value={report.platelet} onChange={onChange} className=\"form-control\" required/>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <button className=\"btn btn-md btn-primary btn-block\" type=\"submit\">Save</button>\r\n            </form>\r\n            <br/>\r\n            {message ? <Message status={status} message={message}/> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddCBC;\r\n","E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\components\\Navbar.js",["196","197","198","199","200","201","202","203","204"],"import React, {useContext} from 'react';\r\nimport {Link, withRouter } from 'react-router-dom'\r\nimport AuthService from '../services/AuthService';\r\nimport {AuthContext} from '../context/AuthContext';\r\n\r\nconst Navbar = (props) =>{\r\n\r\n    const {isAuthenticated, user, roleId, setIsAuthenticated, setUser, setRoleId} = useContext(AuthContext);\r\n\r\n    const onClickLogoutHandler = ()=>{\r\n        AuthService.logout().then(data =>{\r\n            if (data.status == 'success'){\r\n                setUser(null);\r\n                setIsAuthenticated(false);\r\n                props.history.push('/login');\r\n            }\r\n        })\r\n    }\r\n\r\n    const unauthenticatedNavbar = () =>{\r\n        return(\r\n            <>\r\n                <Link to='/login'>\r\n                    <li className=\"nav-item nav-link\">\r\n                        Login\r\n                    </li>\r\n                </Link>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const authenticatedNavbar = () =>{\r\n        return(\r\n            <>\r\n                {\r\n                    roleId == 1 || roleId == 2 ?\r\n                    <Link to='/addCBC'>\r\n                        <li className=\"nav-item nav-link\">\r\n                            Add CBC\r\n                        </li>\r\n                    </Link>: null\r\n                }\r\n                {\r\n                    roleId == 1 || roleId == 2 ?\r\n                    <Link to='/searchCBC'>\r\n                        <li className=\"nav-item nav-link\">\r\n                            Search CBC\r\n                        </li>\r\n                    </Link> : null\r\n                }\r\n                {\r\n                    roleId == 1 ?\r\n                    <Link to='/admin'>\r\n                        <li className=\"nav-item nav-link\">\r\n                            Admin\r\n                        </li>\r\n                    </Link> : null\r\n                }\r\n                {\r\n                    roleId == 3 ?\r\n                    <Link to='/patient'>\r\n                        <li className=\"nav-item nav-link\">\r\n                            Patient\r\n                        </li>\r\n                    </Link> : null\r\n                }\r\n                <button type=\"button\" className=\"btn btn-link nav-item nav-link\" onClick={onClickLogoutHandler}>\r\n                    Logout\r\n                </button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <div className=\"container-fluid\">\r\n                <Link to=\"/\">\r\n                    <div className =\"navbar-brand\">HIPAA</div>\r\n                </Link>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        { !isAuthenticated ? unauthenticatedNavbar() : authenticatedNavbar()}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default withRouter(Navbar);","E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\components\\Login.js",["205","206","207"],"import React, {useState, useContext} from 'react';\r\nimport IdleTimer from './IdleTimer';\r\nimport AuthService from '../services/AuthService';\r\nimport {AuthContext} from '../context/AuthContext';\r\nimport Message from './Message';\r\n\r\nconst Login = (props)=>{\r\n\r\n\r\n    const [user, setUser] = useState({email: \"\", password: \"\", fingerprint:\"\", platform:\"\"});\r\n    const [message, setMessage] = useState(null);\r\n    const [status, setStatus] = useState(null);\r\n    const authContext = useContext(AuthContext);\r\n   \r\n    const onChange = (e) => {\r\n        e.preventDefault();\r\n        setUser({...user, [e.target.name] : e.target.value, platform:\"web\", fingerprint:authContext.fingerprint});\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        AuthService.login(user).then(result=>{\r\n            const {status, message, data} = result;\r\n            if (status=='success'){\r\n                authContext.setUser(data);\r\n                authContext.setRoleId(data.user.roleId);\r\n                authContext.setIsAuthenticated(true);\r\n                props.history.push('/');\r\n                \r\n                const timer = new IdleTimer({\r\n                    timeout: 300,\r\n                    onTimeout: ()=>{\r\n                        AuthService.logout().then(data =>{\r\n                            if (data.status == 'success'){\r\n                                authContext.setUser(null);\r\n                                authContext.setIsAuthenticated(false);\r\n                                props.history.push('/login');\r\n                            }\r\n                        })\r\n                    }\r\n                }); \r\n            }\r\n            else {\r\n                setStatus(status);\r\n                setMessage(message);\r\n            }\r\n                \r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <form onSubmit={onSubmit}>\r\n                <h5>Please sign in</h5>\r\n                <div className=\"row\">\r\n                    <div className=\"form-group col-lg-4\">\r\n                        <label htmlFor=\"email\" className=\"sr-only\">Email: </label>\r\n                        <input type=\"email\" name=\"email\" value={user.email} onChange={onChange} className=\"form-control\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"form-group col-lg-4\">\r\n                        <label htmlFor=\"password\" className=\"sr-only\">Password: </label>\r\n                        <input type=\"password\" name=\"password\" value={user.password} onChange={onChange} className=\"form-control\" />\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <button className=\"btn btn-md btn-primary btn-block\" type=\"submit\">Login</button>\r\n                \r\n            </form>\r\n            <br/>\r\n            {message ? <Message status={status} message={message}/> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\services\\AuthService.js",["208","209"],"export default {\r\n    login: (input) => {\r\n        return fetch('/api/user/login', {\r\n            method: 'POST',\r\n            body: JSON.stringify(input),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.status == 'success')\r\n                localStorage.setItem('loginData', JSON.stringify(data.data));\r\n            return data;\r\n        });\r\n    },\r\n    logout: () => {\r\n\r\n        const loginData = JSON.parse(localStorage.getItem('loginData'));\r\n        localStorage.removeItem(\"loginData\");\r\n        return fetch('/api/user/logout', {\r\n            method: 'POST',\r\n            body: JSON.stringify({refreshToken: loginData.tokens.refreshToken}),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => data);\r\n    },\r\n    isAuthenticated: () => {\r\n\r\n        return new Promise((resolve, reject)=>{\r\n            const loginData = JSON.parse(localStorage.getItem('loginData'));\r\n            if (!loginData)\r\n                resolve({isAuthenticated: false, user: null, roleId: null});\r\n            else\r\n                resolve({isAuthenticated: true, user: loginData, roleId: loginData.user.roleId});\r\n        });\r\n    }\r\n}","E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\services\\MedicalTestService.js",["210","211","212","213","214"],"// import MedicalTestService from '../services/MedicalTestService';\r\nimport AuthService from '../services/AuthService';\r\n\r\nexport const addBloodCBC =  (input) => {\r\n    const loginData = JSON.parse(localStorage.getItem('loginData'));\r\n    return fetch('/api/medicalTest/bloodCBC', {\r\n        method: 'POST',\r\n        body: JSON.stringify(input),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': loginData.tokens.accessToken\r\n        }\r\n    })\r\n    .then(res => {\r\n        if (res.status == 401){\r\n            return fetch('/api/user/refresh', {\r\n                method: 'PUT',\r\n                body: JSON.stringify({refreshToken: loginData.tokens.refreshToken}),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            .then(res1 => res1.json())\r\n            .then(data1 => {\r\n\r\n                if (data1.status == 'success'){\r\n                    loginData.tokens = data1.data;\r\n                    localStorage.setItem('loginData', JSON.stringify(loginData));\r\n                    return addBloodCBC(input);\r\n                }\r\n                else {\r\n                    return 'logout'\r\n                }\r\n            })\r\n        }\r\n        else {\r\n\r\n            return res.json()\r\n        }\r\n    })\r\n}\r\n\r\nexport const fetchLatestBloodCBC = (input) => {\r\n    const loginData = JSON.parse(localStorage.getItem('loginData'));\r\n    return fetch('/api/medicalTest/latestBloodCBC'+input, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': loginData.tokens.accessToken\r\n        }\r\n    })\r\n    .then(res =>{\r\n        if (res.status == 401){\r\n            return fetch('/api/user/refresh', {\r\n                method: 'PUT',\r\n                body: JSON.stringify({refreshToken: loginData.tokens.refreshToken}),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            .then(res1 => res1.json())\r\n            .then(data1 => {\r\n\r\n                if (data1.status == 'success'){\r\n                    loginData.tokens = data1.data;\r\n                    localStorage.setItem('loginData', JSON.stringify(loginData));\r\n                    return fetchLatestBloodCBC(input);\r\n                }\r\n                else {\r\n                    return 'logout'\r\n                }\r\n            })\r\n        }\r\n        else {\r\n\r\n            return res.json()\r\n        }\r\n    })\r\n}\r\n","E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\components\\Message.js",["215"],"import React from 'react';\r\n\r\nconst getStyle = (props)=>{\r\n\r\n    let baseClass = \"alert \";\r\n    if (props.status == \"error\")\r\n        baseClass = baseClass + \"alert-danger\";\r\n    else\r\n        baseClass = baseClass + \"alert-primary\";\r\n\r\n    return baseClass + \" text-center\";\r\n}\r\n\r\nconst Message = (props)=>{\r\n    return (\r\n        <div className={getStyle(props)} role=\"alert\">\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\components\\SearchCBC.js",["216","217","218"],"import React, {useState, useContext} from 'react';\r\nimport * as MedicalTestService from '../services/MedicalTestService';\r\nimport AuthService from '../services/AuthService';\r\nimport {AuthContext} from '../context/AuthContext';\r\nimport CBCReport from './CBCReport';\r\nimport Message from './Message';\r\n\r\nconst SearchCBC = (props)=>{\r\n\r\n    const [personalNumber, setPersonalNumber] = useState(\"\");\r\n    const [report, setReport] = useState({\r\n                                    personalNumber: \"\", \r\n                                    redBloodCell: \"\", \r\n                                    hemoglobin: \"\",\r\n                                    hematocrit: \"\", \r\n                                    whiteBloodCell: \"\", \r\n                                    platelet: \"\", \r\n                                });\r\n    const [message, setMessage] = useState(null);\r\n    const [status, setStatus] = useState(null);\r\n    const authContext = useContext(AuthContext);\r\n\r\n    const onChange = (e) => {\r\n        e.preventDefault();\r\n        setPersonalNumber(e.target.value);\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        \r\n        e.preventDefault();\r\n\r\n        MedicalTestService\r\n        .fetchLatestBloodCBC(\"?personalNumber=\"+personalNumber)\r\n        .then(result=>{\r\n            if (result == 'logout'){\r\n                AuthService.logout().then(data =>{\r\n                    if (data.status == 'success'){\r\n                        authContext.setUser(null);\r\n                        authContext.setIsAuthenticated(false);\r\n                        props.history.push('/login');\r\n                    }\r\n                })\r\n                return;\r\n            }\r\n\r\n            const {status, message, data} = result;\r\n            \r\n            if (status == 'success'){\r\n\r\n                setReport({\r\n                    personalNumber: personalNumber, \r\n                    redBloodCell: data.redBloodCell, \r\n                    hemoglobin: data.hemoglobin,\r\n                    hematocrit: data.hematocrit, \r\n                    whiteBloodCell: data.whiteBloodCell, \r\n                    platelet: data.platelet, \r\n                });\r\n                resetForm();\r\n                setStatus(null);\r\n                setMessage(null);\r\n            }\r\n            else {\r\n\r\n                resetReport();\r\n                setStatus(status);\r\n                setMessage(message);\r\n            }\r\n        })\r\n    }\r\n\r\n    const resetForm = () =>{\r\n        setPersonalNumber(\"\");\r\n    }\r\n\r\n    const resetReport = () =>{\r\n        setReport({\r\n            personalNumber: \"\", \r\n            redBloodCell: \"\", \r\n            hemoglobin: \"\",\r\n            hematocrit: \"\", \r\n            whiteBloodCell: \"\", \r\n            platelet: \"\", \r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <form onSubmit={onSubmit}>\r\n                <h5>Seacrh Patient Latest CBC Report</h5>\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"personalNumber\" className=\"sr-only\">Personal Number: </label>\r\n                    <div class=\"form-group col-lg-4\">\r\n                        <input type=\"text\" name=\"personalNumber\" value={personalNumber} onChange={onChange} className=\"form-control\" required/>\r\n                    </div>\r\n                    <div class=\"form-group col-lg-4\">\r\n                        <button className=\"btn btn-md btn-primary btn-block\" type=\"submit\">Search</button>\r\n                    </div>\r\n                </div> \r\n            </form>\r\n            <br/>\r\n            {report.personalNumber ? <CBCReport report={report}/> : null}\r\n            {message ? <Message status={status} message={message}/> : null}\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default SearchCBC;\r\n","E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\hocs\\PrivateRoute.js",["219"],"import React, {useContext} from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst PrivateRoute = ({component: Component, roles, ...rest}) => {\r\n\r\n    const {isAuthenticated, user, roleId} = useContext(AuthContext);\r\n    return (\r\n        <Route {...rest} render={props => {\r\n            \r\n            if(!isAuthenticated)\r\n                return <Redirect to={{ pathname: '/login', state: {from: props.location} }}/>\r\n\r\n            if (!roles.includes(roleId))\r\n                return <Redirect to={{ pathname: '/', state: {from: props.location} }}/>\r\n\r\n            return <Component {...props}/>\r\n        }} />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute;","E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\components\\Admin.js",[],"E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\hocs\\NonPrivateRoute.js",[],"E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\components\\CBCReport.js",[],"E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\components\\IdleTimer.js",[],"E:\\HIPAA\\genericpackage-pl-hippa\\frontend\\src\\components\\Patient.js",[],"E:\\MERN\\frontend\\src\\index.js",[],["220","221"],"E:\\MERN\\frontend\\src\\App.js",[],"E:\\MERN\\frontend\\src\\context\\AuthContext.js",["222","223"],"import React, {createContext, useState, useEffect} from 'react';\r\nimport * as AuthService from '../services/AuthService';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport default ({children}) => {\r\n\r\n    const [user, setUser] = useState(null);\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    useEffect(async ()=>{\r\n        \r\n        AuthService.isAuthenticated().then(data=>{\r\n            setUser(data.user);\r\n            setIsAuthenticated(data.isAuthenticated);\r\n            setIsLoaded(true);\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            {!isLoaded ? <h1>Loading</h1> : \r\n            <AuthContext.Provider value={{user, setUser, isAuthenticated, setIsAuthenticated}}>\r\n                {children}\r\n            </AuthContext.Provider>}\r\n        </div>\r\n    )\r\n}","E:\\MERN\\frontend\\src\\components\\Navbar.js",["224","225","226"],"import React, {useContext} from 'react';\r\nimport {Link, withRouter } from 'react-router-dom';\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport * as AuthService from '../services/AuthService';\r\nimport {AuthContext} from '../context/AuthContext';\r\n\r\nconst Navbar = (props) =>{\r\n\r\n    const {isAuthenticated, user, roleId, setIsAuthenticated, setUser, setRoleId} = useContext(AuthContext);\r\n\r\n    const logout = ()=>{\r\n        AuthService.logout().then(() =>{\r\n            setUser(null);\r\n            setIsAuthenticated(false);\r\n            props.history.push('/googleLogin');\r\n        })\r\n    }\r\n\r\n    const unauthenticatedNavbar = () =>{\r\n        return(\r\n            <>\r\n                <Link to='/googleLogin'>\r\n                    <li className=\"nav-item nav-link\">\r\n                        Login\r\n                    </li>\r\n                </Link>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const authenticatedNavbar = () =>{\r\n        return(\r\n            <>\r\n                <Link to='/contactsList'>\r\n                    <li className=\"nav-item nav-link\">\r\n                        Contacts\r\n                    </li>\r\n                </Link>\r\n\r\n                <div className=\"float-right\">\r\n                    <GoogleLogout\r\n                        clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\r\n                        buttonText=\"Logout\"\r\n                        onLogoutSuccess={logout}\r\n                        >\r\n                    </GoogleLogout>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <div className=\"container-fluid\">\r\n                <Link to=\"/\">\r\n                    <div className =\"navbar-brand\">HIPAA</div>\r\n                </Link>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        { !isAuthenticated ? unauthenticatedNavbar() : authenticatedNavbar()}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default withRouter(Navbar);","E:\\MERN\\frontend\\src\\components\\Home.js",["227","228"],"import React, {useState, useContext, useEffect} from 'react';\r\nimport {AuthContext} from '../context/AuthContext';\r\n\r\n\r\nconst Home = ()=>{\r\n\r\n    const [user, setUser] = useState({name: \"\", photo: \"\"});\r\n    const authContext = useContext(AuthContext);\r\n\r\n    useEffect(()=>{\r\n        if (authContext.isAuthenticated)\r\n            setUser({name: authContext.user.name, photo: authContext.user.profilePic});\r\n    },[]);\r\n\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <h5>GOOGLE APIs</h5>\r\n            <div>\r\n                {\r\n                    authContext.isAuthenticated ? \r\n                    <div> \r\n                        <img src={user.photo} alt=\"No Photo\" ></img>\r\n                        <p>Welcome {user.name}</p> \r\n                    </div>\r\n                    : null\r\n                }\r\n            </div>\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default Home;\r\n","E:\\MERN\\frontend\\src\\hocs\\NonPrivateRoute.js",[],"E:\\MERN\\frontend\\src\\hocs\\PrivateRoute.js",["229","230"],"import React, {useContext} from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n\r\n    const {isAuthenticated, user, roleId} = useContext(AuthContext);\r\n    return (\r\n        <Route {...rest} render={props => {\r\n            \r\n            if(!isAuthenticated)\r\n                return <Redirect to={{ pathname: '/login', state: {from: props.location} }}/>\r\n\r\n            return <Component {...props}/>\r\n        }} />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute;","E:\\MERN\\frontend\\src\\services\\AuthService.js",["231"],"E:\\MERN\\frontend\\src\\components\\Message.js",["232"],"E:\\MERN\\frontend\\src\\components\\GoogleLogin\\GoogleLogin.js",["233"],"E:\\MERN\\frontend\\src\\components\\Contacts\\ContactsList.js",["234","235","236"],"E:\\MERN\\frontend\\src\\services\\ContactService.js",[],"E:\\google-apis\\frontend\\src\\index.js",[],"E:\\google-apis\\frontend\\src\\App.js",[],"E:\\google-apis\\frontend\\src\\context\\AuthContext.js",["237","238"],"E:\\google-apis\\frontend\\src\\components\\Navbar.js",["239","240","241"],"E:\\google-apis\\frontend\\src\\components\\Home.js",["242","243"],"E:\\google-apis\\frontend\\src\\components\\GoogleLogin\\GoogleLogin.js",["244"],"E:\\google-apis\\frontend\\src\\hocs\\PrivateRoute.js",[],"E:\\google-apis\\frontend\\src\\hocs\\NonPrivateRoute.js",[],"E:\\google-apis\\frontend\\src\\services\\AuthService.js",["245"],"E:\\google-apis\\frontend\\src\\components\\Contacts\\ContactsList.js",["246","247","248","249"],"E:\\google-apis\\frontend\\src\\components\\Message.js",["250"],"E:\\google-apis\\frontend\\src\\services\\ContactService.js",[],"E:\\google-apis\\frontend\\src\\services\\CalenderService.js",[],{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","severity":1,"message":"256","line":7,"column":1,"nodeType":"257","endLine":44,"endColumn":2},{"ruleId":"258","severity":1,"message":"259","line":15,"column":15,"nodeType":"260","endLine":34,"endColumn":6},{"ruleId":"258","severity":1,"message":"261","line":13,"column":7,"nodeType":"262","endLine":13,"endColumn":9,"suggestions":"263"},{"ruleId":"264","severity":1,"message":"265","line":34,"column":24,"nodeType":"266","messageId":"267","endLine":34,"endColumn":26},{"ruleId":"264","severity":1,"message":"265","line":36,"column":37,"nodeType":"266","messageId":"267","endLine":36,"endColumn":39},{"ruleId":"264","severity":1,"message":"265","line":47,"column":24,"nodeType":"266","messageId":"267","endLine":47,"endColumn":26},{"ruleId":"268","severity":1,"message":"269","line":8,"column":29,"nodeType":"270","messageId":"271","endLine":8,"endColumn":33},{"ruleId":"268","severity":1,"message":"272","line":8,"column":72,"nodeType":"270","messageId":"271","endLine":8,"endColumn":81},{"ruleId":"264","severity":1,"message":"265","line":12,"column":29,"nodeType":"266","messageId":"267","endLine":12,"endColumn":31},{"ruleId":"264","severity":1,"message":"265","line":36,"column":28,"nodeType":"266","messageId":"267","endLine":36,"endColumn":30},{"ruleId":"264","severity":1,"message":"265","line":36,"column":43,"nodeType":"266","messageId":"267","endLine":36,"endColumn":45},{"ruleId":"264","severity":1,"message":"265","line":44,"column":28,"nodeType":"266","messageId":"267","endLine":44,"endColumn":30},{"ruleId":"264","severity":1,"message":"265","line":44,"column":43,"nodeType":"266","messageId":"267","endLine":44,"endColumn":45},{"ruleId":"264","severity":1,"message":"265","line":52,"column":28,"nodeType":"266","messageId":"267","endLine":52,"endColumn":30},{"ruleId":"264","severity":1,"message":"265","line":60,"column":28,"nodeType":"266","messageId":"267","endLine":60,"endColumn":30},{"ruleId":"264","severity":1,"message":"265","line":24,"column":23,"nodeType":"266","messageId":"267","endLine":24,"endColumn":25},{"ruleId":"268","severity":1,"message":"273","line":30,"column":23,"nodeType":"270","messageId":"271","endLine":30,"endColumn":28},{"ruleId":"264","severity":1,"message":"265","line":34,"column":45,"nodeType":"266","messageId":"267","endLine":34,"endColumn":47},{"ruleId":"255","severity":1,"message":"274","line":1,"column":1,"nodeType":"257","endLine":41,"endColumn":2},{"ruleId":"264","severity":1,"message":"265","line":12,"column":29,"nodeType":"266","messageId":"267","endLine":12,"endColumn":31},{"ruleId":"268","severity":1,"message":"275","line":2,"column":8,"nodeType":"270","messageId":"271","endLine":2,"endColumn":19},{"ruleId":"264","severity":1,"message":"265","line":15,"column":24,"nodeType":"266","messageId":"267","endLine":15,"endColumn":26},{"ruleId":"264","severity":1,"message":"265","line":26,"column":34,"nodeType":"266","messageId":"267","endLine":26,"endColumn":36},{"ruleId":"264","severity":1,"message":"265","line":53,"column":24,"nodeType":"266","messageId":"267","endLine":53,"endColumn":26},{"ruleId":"264","severity":1,"message":"265","line":64,"column":34,"nodeType":"266","messageId":"267","endLine":64,"endColumn":36},{"ruleId":"264","severity":1,"message":"265","line":6,"column":22,"nodeType":"266","messageId":"267","endLine":6,"endColumn":24},{"ruleId":"264","severity":1,"message":"265","line":35,"column":24,"nodeType":"266","messageId":"267","endLine":35,"endColumn":26},{"ruleId":"264","severity":1,"message":"265","line":37,"column":37,"nodeType":"266","messageId":"267","endLine":37,"endColumn":39},{"ruleId":"264","severity":1,"message":"265","line":48,"column":24,"nodeType":"266","messageId":"267","endLine":48,"endColumn":26},{"ruleId":"268","severity":1,"message":"269","line":7,"column":29,"nodeType":"270","messageId":"271","endLine":7,"endColumn":33},{"ruleId":"251","replacedBy":"276"},{"ruleId":"253","replacedBy":"277"},{"ruleId":"255","severity":1,"message":"256","line":6,"column":1,"nodeType":"257","endLine":29,"endColumn":2},{"ruleId":"258","severity":1,"message":"259","line":12,"column":15,"nodeType":"260","endLine":19,"endColumn":6},{"ruleId":"268","severity":1,"message":"269","line":9,"column":29,"nodeType":"270","messageId":"271","endLine":9,"endColumn":33},{"ruleId":"268","severity":1,"message":"278","line":9,"column":35,"nodeType":"270","messageId":"271","endLine":9,"endColumn":41},{"ruleId":"268","severity":1,"message":"272","line":9,"column":72,"nodeType":"270","messageId":"271","endLine":9,"endColumn":81},{"ruleId":"258","severity":1,"message":"279","line":13,"column":7,"nodeType":"262","endLine":13,"endColumn":9,"suggestions":"280"},{"ruleId":"281","severity":1,"message":"282","line":23,"column":25,"nodeType":"283","endLine":23,"endColumn":63},{"ruleId":"268","severity":1,"message":"269","line":7,"column":29,"nodeType":"270","messageId":"271","endLine":7,"endColumn":33},{"ruleId":"268","severity":1,"message":"278","line":7,"column":35,"nodeType":"270","messageId":"271","endLine":7,"endColumn":41},{"ruleId":"264","severity":1,"message":"265","line":11,"column":25,"nodeType":"266","messageId":"267","endLine":11,"endColumn":27},{"ruleId":"264","severity":1,"message":"265","line":6,"column":22,"nodeType":"266","messageId":"267","endLine":6,"endColumn":24},{"ruleId":"264","severity":1,"message":"265","line":19,"column":27,"nodeType":"266","messageId":"267","endLine":19,"endColumn":29},{"ruleId":"258","severity":1,"message":"259","line":11,"column":15,"nodeType":"260","endLine":22,"endColumn":6},{"ruleId":"264","severity":1,"message":"265","line":14,"column":19,"nodeType":"266","messageId":"267","endLine":14,"endColumn":21},{"ruleId":"258","severity":1,"message":"284","line":22,"column":7,"nodeType":"262","endLine":22,"endColumn":9,"suggestions":"285"},{"ruleId":"255","severity":1,"message":"256","line":6,"column":1,"nodeType":"257","endLine":29,"endColumn":2},{"ruleId":"258","severity":1,"message":"259","line":12,"column":15,"nodeType":"260","endLine":19,"endColumn":6},{"ruleId":"268","severity":1,"message":"269","line":9,"column":29,"nodeType":"270","messageId":"271","endLine":9,"endColumn":33},{"ruleId":"268","severity":1,"message":"278","line":9,"column":35,"nodeType":"270","messageId":"271","endLine":9,"endColumn":41},{"ruleId":"268","severity":1,"message":"272","line":9,"column":72,"nodeType":"270","messageId":"271","endLine":9,"endColumn":81},{"ruleId":"258","severity":1,"message":"279","line":13,"column":7,"nodeType":"262","endLine":13,"endColumn":9,"suggestions":"286"},{"ruleId":"281","severity":1,"message":"282","line":23,"column":25,"nodeType":"283","endLine":23,"endColumn":63},{"ruleId":"264","severity":1,"message":"265","line":19,"column":27,"nodeType":"266","messageId":"267","endLine":19,"endColumn":29},{"ruleId":"264","severity":1,"message":"265","line":11,"column":25,"nodeType":"266","messageId":"267","endLine":11,"endColumn":27},{"ruleId":"258","severity":1,"message":"259","line":12,"column":15,"nodeType":"260","endLine":22,"endColumn":6},{"ruleId":"264","severity":1,"message":"265","line":15,"column":19,"nodeType":"266","messageId":"267","endLine":15,"endColumn":21},{"ruleId":"268","severity":1,"message":"287","line":28,"column":33,"nodeType":"270","messageId":"271","endLine":28,"endColumn":37},{"ruleId":"264","severity":1,"message":"265","line":29,"column":19,"nodeType":"266","messageId":"267","endLine":29,"endColumn":21},{"ruleId":"264","severity":1,"message":"265","line":6,"column":22,"nodeType":"266","messageId":"267","endLine":6,"endColumn":24},"no-native-reassign",["288"],"no-negated-in-lhs",["289"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'authContext.isAuthenticated', 'authContext.user.user.firstName', and 'authContext.user.user.lastName'. Either include them or remove the dependency array.","ArrayExpression",["290"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'setRoleId' is assigned a value but never used.","'timer' is assigned a value but never used.","Assign object to a variable before exporting as module default","'AuthService' is defined but never used.",["288"],["289"],"'roleId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'authContext.isAuthenticated', 'authContext.user.name', and 'authContext.user.profilePic'. Either include them or remove the dependency array.",["291"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'contacts'. Either include it or remove the dependency array.",["292"],["293"],"'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"296","fix":"300"},"Update the dependencies array to be: [authContext.isAuthenticated, authContext.user.user.firstName, authContext.user.user.lastName]",{"range":"301","text":"302"},"Update the dependencies array to be: [authContext.isAuthenticated, authContext.user.name, authContext.user.profilePic]",{"range":"303","text":"304"},"Update the dependencies array to be: [contacts]",{"range":"305","text":"306"},{"range":"307","text":"304"},[443,445],"[authContext.isAuthenticated, authContext.user.user.firstName, authContext.user.user.lastName]",[414,416],"[authContext.isAuthenticated, authContext.user.name, authContext.user.profilePic]",[695,697],"[contacts]",[414,416]]